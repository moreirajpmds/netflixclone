{"ast":null,"code":"var _jsxFileName = \"/home/moreirajpmds/Desktop/PROJETOS/netflixclone/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nexport default (() => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o featured\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results - 1));\n      let chosen = originals[0].items.results;\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, featuredData && /*#__PURE__*/React.createElement(FeaturedMovie, {\n    item: featuredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, movieList.map((item, key) => /*#__PURE__*/React.createElement(MovieRow, {\n    key: key,\n    title: item.title,\n    items: item.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n});","map":{"version":3,"sources":["/home/moreirajpmds/Desktop/PROJETOS/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","chosen","map","item","key","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,gBAAe,MAAM;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMR,IAAI,CAACS,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAW,WAA1B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,GAA4B,CAA7C,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGV,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAhC;AACD,KATD;;AAWAZ,IAAAA,OAAO;AAER,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,YAAY,iBACX,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEA,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAME;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACkB,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAoB,IAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,IAAA,KAAK,EAAEF,IAAI,CAACJ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CADF;AAcD,CAnCD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])\n  const [featuredData, setFeaturedData] = useState(null);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results -1));\n      let chosen = originals[0].items.results\n    }\n\n    loadAll();\n\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}